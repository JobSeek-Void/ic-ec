name: Release Build
on:
  push:
    tags:
      - 'v*'
      - 'r*'
jobs:
  cd-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Create Google Services
        run: |
          echo "$GOOGLE_SERVICES" > app/google-services.json.b64
          base64 -d -i app/google-services.json.b64 > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{secrets.GOOGLE_SERVICES}}

      - name: Create KeyStore
        run: |
          echo "$SIGNING_KEY_BASE_64" > ./keystore.jks.b64
          base64 -d -i ./keystore.jks.b64 > ./keystore.jks

      - name: Create Local Properties
        env:
          ICEC_SERVER_KEY: $
        run: 
         echo ICEC_SERVER_KEY=\"ICEC_SERVER_KEY\" > ./local.properties
         echo storeFile=keySore.jks > ./local.properties
         echo storePassword="$KEY_STORE_PASSWORD" > ./local.properties
         echo keyAlias="$ALIAS" > ./local.properties
         echo keyPassword="$KEY_PASSWORD" > ./local.properties
  
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE_64 }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{secrets.FIREBASE_CREDENTIAL}}
          groups: icec_team
          file: app/build/outputs/apk/release/app-release-unsigned.apk
